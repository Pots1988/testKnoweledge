[{
  "question": {
    "section": "JavaScript",
    "id": 1,
    "theme": "Современные возможности",
    "text": "Объявить переменную <span>name</span> так чтобы ее можно было менять, но она была бы недоступна до объявления?",
    "time": 20,
    "answer": "let name"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 2,
    "theme": "Современные возможности",
    "text": "Объявить переменную <span>name</span> так чтобы ее нельзя было менять и она была бы недоступна до объявления?",
    "time": 20,
    "answer": "const name"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 3,
    "theme": "Современные возможности",
    "text": "Деструктурировать возрасте из массива <span>[Илья, 20]</span> в переменную <span>age</span> через <span>let</span>?",
    "time": 20,
    "answer": "let [,age]=[Илья,20]"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 4,
    "theme": "Современные возможности",
    "text": "Деструктурировать массив <span>[Илья, 20]</span> в переменную <span>name</span> через <span>let</span>, остаток записать в <span>last</span>?",
    "time": 20,
    "answer": "let [name,...last]=[Илья,20]"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 5,
    "theme": "Современные возможности",
    "text": "Чему будут равны значения <span>name и age</span> при <span>let [name, age]=[]</span>?",
    "time": 20,
    "answer": "undefined"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 6,
    "theme": "Современные возможности",
    "text": "Деструктурировать массив <span>[Илья, 20]</span> в переменные <span>name, age</span> через <span>let</span> и указать значения по умолчанию <span>User, 30</span>?",
    "time": 20,
    "answer": "let [name=User,age=30]=[Илья,20]"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 7,
    "theme": "Современные возможности",
    "text": "Деструктурировать массив <span>[Илья, 20]</span> в переменные <span>name, age</span> через <span>let</span> и указать значения по умолчанию в виде вызова функций<span>getUser, getAge</span>?",
    "time": 20,
    "answer": "let [name=getUser(),age=getAge()]=[Илья,20]"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 8,
    "theme": "Современные возможности",
    "text": "Деструктурировать объект <span>{name:Илья, age:20}</span> в переменные <span>n, a</span> через <span>let</span> и указать значения по умолчанию <span>User, 30</span>?",
    "time": 20,
    "answer": "let {name:n=User,age:a=30}={name:Илья,age:20}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 9,
    "theme": "Современные возможности",
    "text": "Создайте функцию <span>new</span> с параметром по умолчанию <span>age=20</span>?",
    "time": 20,
    "answer": "function new(age=20){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 10,
    "theme": "Современные возможности",
    "text": "Создайте функцию <span>new</span>, чтобы все ее аргументы попали в <span>last</span> в виде массива?",
    "time": 20,
    "answer": "function new(...last){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 11,
    "theme": "Современные возможности",
    "text": "Записать функцию-стрелку с параметрами <span>a, b</span> и результатом <span>a + b</span>?",
    "time": 20,
    "answer": "(a,b)=>a+b"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 12,
    "theme": "Современные возможности",
    "text": "Записать текст <span>something</span> в обратных кавычках?",
    "time": 20,
    "answer": "`something`"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 13,
    "theme": "Современные возможности",
    "text": "Как вывести данные из переменной <span>age</span> в строку <span>ваш возраст:<span> с помощью новых кавычек?",
    "time": 20,
    "answer": "`ваш возраст:${age}`"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 14,
    "theme": "Современные возможности",
    "text": "Как проверить включает строка <span>str1</span> в себя строку <span>str2</span>?",
    "time": 20,
    "answer": "str1.includes(str2)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 15,
    "theme": "Современные возможности",
    "text": "Как проверить что строка <span>str1</span> оканчивается на <span>str2</span>?",
    "time": 20,
    "answer": "str1.endsWith(str2)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 16,
    "theme": "Современные возможности",
    "text": "Как проверить что строка <span>str1</span> начинается на <span>str2</span>?",
    "time": 20,
    "answer": "str1.startsWith(str2)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 17,
    "theme": "Современные возможности",
    "text": "Как повторить строку <span>str1</span> в количестве <span>5</span> раз?",
    "time": 20,
    "answer": "str1.repeat(5)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 18,
    "theme": "Современные возможности",
    "text": "Есть переменная <span>let name = 'Вася';</span>. Создайте объект <span>user</span> с этим свойством?",
    "time": 20,
    "answer": "user={name}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 19,
    "theme": "Современные возможности",
    "text": "Есть переменная <span>let propName = 'firstName';</span>. Создайте объект <span>user</span> с вычисляемым свойством <span>propName + 10</span> со значением <span>20</span>?",
    "time": 20,
    "answer": "user={[propName+10]:20}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 20,
    "theme": "Современные возможности",
    "text": "Скопируйте в объект <span>target</span> свойства из объектов <span>obj1, obj2</span>?",
    "time": 20,
    "answer": "Object.assign(target,obj1,obj2)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 21,
    "theme": "Современные возможности",
    "text": "Проверьте равенство значений <span>valu1</span> и <span>value2</span> через новую функцию?",
    "time": 20,
    "answer": "Object.is(value1,value2)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 22,
    "theme": "Современные возможности",
    "text": "Как вызвать метод <span>walk</span> объекта <span>animal</span>, внутри метода <span>run</span> объекта <span>rabbit</span>, который отнаследован от <span>animal</span>?",
    "time": 20,
    "answer": "super.walk()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 23,
    "theme": "Современные возможности",
    "text": "Напишите класс <span>User</span>?",
    "time": 20,
    "answer": "class User {}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 24,
    "theme": "Современные возможности",
    "text": "Напишите класс <span>User</span> с параметром <span>name</span>?",
    "time": 20,
    "answer": "class User{constructor(name){this.name=name}}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 25,
    "theme": "Современные возможности",
    "text": "Напишите класс <span>User</span> с методом <span>age</span>?",
    "time": 20,
    "answer": "class User{age(){}}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 26,
    "theme": "Современные возможности",
    "text": "Напишите класс <span>User</span> со статическим методом <span>age</span>?",
    "time": 20,
    "answer": "class User{static age(){}}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 27,
    "theme": "Современные возможности",
    "text": "Напишите класс <span>Admin</span>, который наследует от класса <span>User</span>?",
    "time": 20,
    "answer": "class Admin extends User{}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 28,
    "theme": "Современные возможности",
    "text": "Как в методе <span>name</span> класса <span>Admin</span>, который наследуетcя от класса <span>User</span>, унаследовать метод <span>age</span> класса <span>User</span>?",
    "time": 20,
    "answer": "name(){super.age()}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 29,
    "theme": "Современные возможности",
    "text": "Создайте тип данных <span>Symbol</span>?",
    "time": 20,
    "answer": "Symbol()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 30,
    "theme": "Современные возможности",
    "text": "Создайте тип данных <span>Symbol</span> с именем <span>name</span>?",
    "time": 20,
    "answer": "Symbol('name')"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 31,
    "theme": "Современные возможности",
    "text": "Создайте тип данных <span>Symbol</span> с именем <span>name</span> в реестре?",
    "time": 20,
    "answer": "Symbol.for('name')"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 32,
    "theme": "Современные возможности",
    "text": "Для созданного в реестре глобального символа <span>test</span> получите имя символа?",
    "time": 20,
    "answer": "Symbol.keyFor(test)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 33,
    "theme": "Современные возможности",
    "text": "Напишите перебор циклом итерируемых объектов массива <span>arr</span> через переменную <span>let value</span>?",
    "time": 20,
    "answer": "for(let value of arr){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 34,
    "theme": "Современные возможности",
    "text": "Какое свойство должно быть в объекте, чтобы его можно было перебрать в цикле?",
    "time": 20,
    "answer": "Symbol.iterator"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 35,
    "theme": "Современные возможности",
    "text": "Создайте коллекцию типа <span>Map</span>?",
    "time": 20,
    "answer": "new Map()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 36,
    "theme": "Современные возможности",
    "text": "В коллекцию <span>col</span> типа <span>Map</span> добавьте значение <span>'str1'</span> с ключом <span>true</span>?",
    "time": 20,
    "answer": "col.set(true,'str1')"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 37,
    "theme": "Современные возможности",
    "text": "Из коллекции <span>col</span> типа <span>Map</span> извлеките значение по ключу <span>true</span>?",
    "time": 20,
    "answer": "col.get(true)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 38,
    "theme": "Современные возможности",
    "text": "В коллекции <span>col</span> типа <span>Map</span> посмотреть общее количество записей?",
    "time": 20,
    "answer": "col.size"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 39,
    "theme": "Современные возможности",
    "text": "Из коллекции <span>col</span> типа <span>Map</span> удалить запись ключом <span>key</span>?",
    "time": 20,
    "answer": "col.delete(key)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 40,
    "theme": "Современные возможности",
    "text": "Из коллекции <span>col</span> типа <span>Map</span> удалить все записи?",
    "time": 20,
    "answer": "col.clear()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 41,
    "theme": "Современные возможности",
    "text": "В коллекции <span>col</span> типа <span>Map</span> проверить наличие записи с ключом <span>key</span>?",
    "time": 20,
    "answer": "col.has(key)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 42,
    "theme": "Современные возможности",
    "text": "В коллекции <span>col</span> типа <span>Map</span> проитерироваться по ключам через переменную <span>key</span>?",
    "time": 20,
    "answer": "for(let key of col.keys()){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 43,
    "theme": "Современные возможности",
    "text": "В коллекции <span>col</span> типа <span>Map</span> проитерироваться по значениям через переменную <span>value</span>?",
    "time": 20,
    "answer": "for(let value of col.values()){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 44,
    "theme": "Современные возможности",
    "text": "В коллекции <span>col</span> типа <span>Map</span> проитерироваться по записям через переменную <span>entry</span>?",
    "time": 20,
    "answer": "for(let entry of col){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 45,
    "theme": "Современные возможности",
    "text": "Создайте коллекцию типа <span>Set</span>?",
    "time": 20,
    "answer": "new Set()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 46,
    "theme": "Современные возможности",
    "text": "В коллекцию <span>set</span> типа <span>Set</span> добавьте значение <span>'str1'</span> с ключом <span>true</span>?",
    "time": 20,
    "answer": "set.add(true,'str1')"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 47,
    "theme": "Современные возможности",
    "text": "В коллекции <span>set</span> типа <span>Set</span> посмотреть общее количество записей?",
    "time": 20,
    "answer": "set.size"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 48,
    "theme": "Современные возможности",
    "text": "Из коллекции <span>set</span> типа <span>Set</span> удалить элемент <span>item</span>?",
    "time": 20,
    "answer": "set.delete(item)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 49,
    "theme": "Современные возможности",
    "text": "Из коллекции <span>set</span> типа <span>Set</span> удалить все записи?",
    "time": 20,
    "answer": "set.clear()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 50,
    "theme": "Современные возможности",
    "text": "В коллекции <span>set</span> типа <span>Set</span> проверить наличие <span>item</span>?",
    "time": 20,
    "answer": "set.has(item)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 51,
    "theme": "Современные возможности",
    "text": "Какое состояние принимает <span>Promise</span> вначале?",
    "time": 20,
    "answer": "pending"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 52,
    "theme": "Современные возможности",
    "text": "Какое состояние принимает <span>Promise</span> когда он успешно выполнен?",
    "time": 20,
    "answer": "fulfilled"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 53,
    "theme": "Современные возможности",
    "text": "Какое состояние принимает <span>Promise</span> когда он выполнен с ошибкой?",
    "time": 20,
    "answer": "rejected"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 54,
    "theme": "Современные возможности",
    "text": "Навесьте на <span>promise</span> обработчики <span>ok</span> и <span>error</span>?",
    "time": 20,
    "answer": "promise.then(ok, error)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 55,
    "theme": "Современные возможности",
    "text": "Навесьте на <span>promise</span> обработчик ошибки <span>error</span>, а на успешное выполнение не надо?",
    "time": 20,
    "answer": "promise.then(null, error)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 56,
    "theme": "Современные возможности",
    "text": "Навесьте на <span>promise</span> только обработчик ошибки <span>error</span>?",
    "time": 20,
    "answer": "promise.catch(error)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 57,
    "theme": "Современные возможности",
    "text": "Как передать функции <span>f1, f2</span>, которые возвращают примисы, в промис, чтобы дождаться выполнения обоих функций?",
    "time": 20,
    "answer": "Promise.all([f1,f2])"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 58,
    "theme": "Современные возможности",
    "text": "Как передать функции <span>f1, f2</span>, которые возвращают примисы, в промис, чтобы дождаться первого успешного выполнения любой из функций?",
    "time": 20,
    "answer": "Promise.race([f1,f2])"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 59,
    "theme": "Современные возможности",
    "text": "Создать успешно выполненный промис со значением <span>value</span>?",
    "time": 20,
    "answer": "Promise.resolve(value)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 60,
    "theme": "Современные возможности",
    "text": "Создать промис выполненный с ошибкой со значением <span>value</span>?",
    "time": 20,
    "answer": "Promise.reject(value)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 61,
    "theme": "Современные возможности",
    "text": "Создайте <span>fetch</span> с адресом <span>url</span> и с объектом параметров <span>options</span>?",
    "time": 20,
    "answer": "fetch(url,options)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 62,
    "theme": "Современные возможности",
    "text": "Выведите данные <span>response</span> полученные через <span>fetch</span> в формате текста?",
    "time": 20,
    "answer": "response.text()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 63,
    "theme": "Современные возможности",
    "text": "Выведите данные <span>response</span> полученные через <span>fetch</span> в формате массива?",
    "time": 20,
    "answer": "response.arrayBuffer()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 64,
    "theme": "Современные возможности",
    "text": "Выведите данные <span>response</span> полученные через <span>fetch</span> в формате <span>blob</span>?",
    "time": 20,
    "answer": "response.blob()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 65,
    "theme": "Современные возможности",
    "text": "Выведите данные <span>response</span> полученные через <span>fetch</span> в формате данных формы?",
    "time": 20,
    "answer": "response.formData()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 66,
    "theme": "Современные возможности",
    "text": "Выведите данные <span>response</span> полученные через <span>fetch</span> в формате <span>json</span>?",
    "time": 20,
    "answer": "response.json()"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 67,
    "theme": "Современные возможности",
    "text": "Каким ключевым словом обозначаются переменные и функции, которые могут быть использованы снаружи?",
    "time": 20,
    "answer": "export"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 68,
    "theme": "Современные возможности",
    "text": "Каким ключевым словом мы подключаем переменные и функции из модуля?",
    "time": 20,
    "answer": "import"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 69,
    "theme": "Современные возможности",
    "text": "Экспортируйте переменную <span>milk</span>?",
    "time": 20,
    "answer": "export{milk}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 70,
    "theme": "Современные возможности",
    "text": "Экспортируйте переменные <span>milk и eggs</span>?",
    "time": 20,
    "answer": "export{milk,eggs}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 71,
    "theme": "Современные возможности",
    "text": "Экспортируйте переменную <span>milk</span>, с именем <span>one</span>?",
    "time": 20,
    "answer": "export{milk as one}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 72,
    "theme": "Современные возможности",
    "text": "Импортируйте переменную <span>milk</span>, из файла <span>'/foods'</span>?",
    "time": 20,
    "answer": "import{milk} from '/foods'"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 73,
    "theme": "Современные возможности",
    "text": "Импортируйте переменную <span>milk</span> под именем <span>new</span>, из файла <span>'/foods'</span>?",
    "time": 20,
    "answer": "import{milk as new} from '/foods'"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 74,
    "theme": "Современные возможности",
    "text": "Импортируйте все значения под именем <span>numbers</span>, из файла <span>'/foods'</span>?",
    "time": 20,
    "answer": "import * as numbers from '/foods'"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 75,
    "theme": "Современные возможности",
    "text": "Экспортируйте переменную <span>milk</span> по умолчанию?",
    "time": 20,
    "answer": "export default milk"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 76,
    "theme": "Современные возможности",
    "text": "Импортируйте переменную <span>milk</span>, из файла <span>'/foods'</span>, котороая была экспортирована по умолчанию?",
    "time": 20,
    "answer": "import milk from '/foods'"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 77,
    "theme": "Современные возможности",
    "text": "Создайте прокси для объекта <span>target</span> с объектом с ловушками <span>handler</span>?",
    "time": 20,
    "answer": "new Proxy(target,handler)"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 78,
    "theme": "Современные возможности",
    "text": "В созданном прокси для объекта <span>target</span> опишите метод срабатывающий при чтении свойства <span>prop</span>?",
    "time": 20,
    "answer": "get(target,prop){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 79,
    "theme": "Современные возможности",
    "text": "В созданном прокси для объекта <span>target</span> опишите метод срабатывающий при установке свойства <span>prop</span> со значением <span>value</span>?",
    "time": 20,
    "answer": "set(target,prop,value){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 80,
    "theme": "Современные возможности",
    "text": "В созданном прокси для объекта <span>target</span> опишите метод срабатывающий при проверке наличия свойства <span>prop</span>?",
    "time": 20,
    "answer": "has(target,prop){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 81,
    "theme": "Современные возможности",
    "text": "В созданном прокси для объекта <span>target</span> опишите метод срабатывающий при удалении свойства <span>prop</span>?",
    "time": 20,
    "answer": "deleteProperty(target,prop){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 82,
    "theme": "Современные возможности",
    "text": "В созданном прокси для объекта <span>target</span> опишите метод срабатывающий при использовании свойств <span>for..in и for..of</span>?",
    "time": 20,
    "answer": "enumerate(target){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 83,
    "theme": "Современные возможности",
    "text": "В созданной прокси функции <span>func</span> опишите ловушку для ее вызова с аргументами <span>target, thisArgument, argumentsList</span>?",
    "time": 20,
    "answer": "apply(target,thisArgument,argumentsList){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
},
{
  "question": {
    "section": "JavaScript",
    "id": 84,
    "theme": "Современные возможности",
    "text": "Напишите ловушку для прокси, перехватывающую вызов функции как конструктора с параметрами <span>target, argumentsList</span>?",
    "time": 20,
    "answer": "constructor(target,argumentsList){}"
  },
  "answer": {
    "time": "",
    "text": ""
  }
}]
